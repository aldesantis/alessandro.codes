---
import Link from "@components/ui/Link.astro";
import type { Link as LinkType } from "src/lib/links";
import { buildContentEntryUrl } from "src/lib/plugins/remarkWikiLink.mjs";
import LinkList from "@components/ui/LinkList.astro";
import MobileCollapsible from "@components/ui/MobileCollapsible.astro";

interface Props {
  outboundLinks: LinkType[];
  inboundLinks: LinkType[];
}

const { outboundLinks, inboundLinks } = Astro.props;
---

<MobileCollapsible label="Links to">
  {
    outboundLinks.length > 0 ? (
      <LinkList>
        {outboundLinks.map((link: LinkType) => (
          <li>
            <Link
              class="font-sans"
              href={buildContentEntryUrl({
                contentType: link.contentType,
                slug: link.slug,
              })}
              variant="muted"
            >
              {link.title}
            </Link>
          </li>
        ))}
      </LinkList>
    ) : (
      <div class="font-sans text-sm">Nothing yet!</div>
    )
  }
</MobileCollapsible>

<MobileCollapsible label="Linked from">
  {
    inboundLinks.length > 0 ? (
      <LinkList>
        {inboundLinks.map((link: LinkType) => (
          <li>
            <Link
              class="font-sans"
              href={buildContentEntryUrl({
                contentType: link.contentType,
                slug: link.slug,
              })}
              variant="muted"
            >
              {link.title}
            </Link>
          </li>
        ))}
      </LinkList>
    ) : (
      <div class="font-sans text-sm">Nothing yet!</div>
    )
  }
</MobileCollapsible>
