---
import Link from "@components/ui/Link.astro";
import type { GardenEntryLink as LinkType } from "src/lib/garden";
import { buildContentEntryUrl } from "src/lib/plugins/remarkWikiLink.mjs";
import LinkList from "@components/ui/LinkList.astro";
import MobileCollapsible from "@components/ui/MobileCollapsible.astro";

interface Props {
  outboundLinks: LinkType[];
  inboundLinks: LinkType[];
}

const { outboundLinks, inboundLinks } = Astro.props;

// Helper function to deduplicate links based on slug
const deduplicateLinks = (links: LinkType[]): LinkType[] => {
  const seen = new Set<string>();
  return links.filter((link) => {
    const key = `${link.type}-${link.slug}`;
    if (seen.has(key)) return false;
    seen.add(key);
    return true;
  });
};

const uniqueOutboundLinks = deduplicateLinks(outboundLinks);
const uniqueInboundLinks = deduplicateLinks(inboundLinks);
---

<MobileCollapsible label="Links to">
  {
    uniqueOutboundLinks.length > 0 ? (
      <LinkList>
        {uniqueOutboundLinks.map((link: LinkType) => (
          <li>
            <Link
              class="font-sans"
              href={buildContentEntryUrl({
                type: link.type,
                slug: link.slug,
              })}
              variant="muted"
            >
              {link.title}
            </Link>
          </li>
        ))}
      </LinkList>
    ) : (
      <div class="font-sans text-sm text-zinc-500">Nothing yet!</div>
    )
  }
</MobileCollapsible>

<MobileCollapsible label="Linked from">
  {
    uniqueInboundLinks.length > 0 ? (
      <LinkList>
        {uniqueInboundLinks.map((link: LinkType) => (
          <li>
            <Link
              class="font-sans"
              href={buildContentEntryUrl({
                type: link.type,
                slug: link.slug,
              })}
              variant="muted"
            >
              {link.title}
            </Link>
          </li>
        ))}
      </LinkList>
    ) : (
      <div class="font-sans text-sm text-zinc-500">Nothing yet!</div>
    )
  }
</MobileCollapsible>
