---
import { getCollection } from "astro:content";
import Prose from "@components/ui/Prose.astro";
import Layout from "@layouts/Layout.astro";
import { render } from "astro:content";
import { getMdxComponents } from "src/lib/content";
import ContentSidebar from "@components/content/ContentSidebar.astro";
import { getSortedNows } from "src/lib/content/nows";
import Link from "@components/ui/Link.astro";

export async function getStaticPaths() {
  const nows = await getCollection("nows");

  return nows.map((now) => ({
    params: { id: now.id },
    props: { now },
  }));
}

const { now } = Astro.props;
const { Content } = await render(now);

const allNows = await getSortedNows();
const currentIndex = allNows.findIndex((item) => item.id === now.id);
const prevNow =
  currentIndex < allNows.length - 1 ? allNows[currentIndex + 1] : null;
const nextNow = currentIndex > 0 ? allNows[currentIndex - 1] : null;
---

<Layout>
  <title slot="head">{now.data.title} | Alessandro Desantis</title>

  <div class="grid grid-cols-12">
    <div class="col-span-12 lg:col-span-4 lg:order-2">
      <ContentSidebar entry={now} />
    </div>

    <div class="col-span-12 lg:col-span-8 lg:order-1">
      <div class="flex justify-between max-w-[65ch] -mb-8">
        {
          prevNow ? (
            <Link href={`/now/${prevNow.id}`} class="font-sans">
              &LeftArrow;
              {prevNow.data.title}
            </Link>
          ) : (
            <div />
          )
        }

        {
          nextNow && (
            <Link href={`/now/${nextNow.id}`} class="font-sans">
              {nextNow.data.title}
              &RightArrow;
            </Link>
          )
        }
      </div>

      <Prose>
        <h1>{now.data.title}</h1>
        <Content components={getMdxComponents()} />
      </Prose>
    </div>
  </div>
</Layout>
